# ===================================================================
#                      \u670D\u52A1\u5668\u4E0E\u5E94\u7528\u57FA\u672C\u8BBE\u7F6E
# ===================================================================
# \u8BBE\u7F6E\u5185\u5D4C\u670D\u52A1\u5668\uFF08\u5982Tomcat\uFF09\u7684\u76D1\u542C\u7AEF\u53E3
server.port=8088
# \u8BBE\u7F6E\u60A8\u7684Spring Boot\u5E94\u7528\u7A0B\u5E8F\u7684\u540D\u79F0
spring.application.name=qingdao-app


# ===================================================================
#                      \u6570\u636E\u5E93\u8FDE\u63A5\u914D\u7F6E\u793A\u4F8B (\u5F53\u524D\u672A\u542F\u7528)
# ===================================================================
# --- MySQL \u6570\u636E\u5E93\u8FDE\u63A5\u914D\u7F6E\u793A\u4F8B (\u5DF2\u88AB\u6CE8\u91CA\uFF0C\u5F53\u524D\u65E0\u6548) ---
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.url=jdbc:mysql://localhost:3306/your_db?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
# spring.datasource.username=root
# spring.datasource.password=your_password
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# --- Oracle \u6570\u636E\u5E93\u8FDE\u63A5\u914D\u7F6E\u793A\u4F8B (\u5DF2\u88AB\u6CE8\u91CA\uFF0C\u5F53\u524D\u65E0\u6548) ---
# spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
# spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/your_service_name
# spring.datasource.username=your_username
# spring.datasource.password=your_password
# spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# --- SQL Server \u6570\u636E\u5E93\u8FDE\u63A5\u914D\u7F6E\u793A\u4F8B (\u5DF2\u88AB\u6CE8\u91CA\uFF0C\u5F53\u524D\u65E0\u6548) ---
# spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
# spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=your_db
# spring.datasource.username=your_username
# spring.datasource.password=your_password
# spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true


# ===================================================================
#                      \u5F53\u524D\u542F\u7528\u7684 Oracle \u6570\u636E\u5E93\u914D\u7F6E
# ===================================================================
# \u6307\u5B9AOracle\u6570\u636E\u5E93\u7684JDBC\u9A71\u52A8\u7C7B
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
# \u6570\u636E\u5E93\u8FDE\u63A5\u5B57\u7B26\u4E32 (URL)\uFF0C\u683C\u5F0F\u4E3A jdbc:oracle:thin:@\u4E3B\u673A\u5730\u5740:\u7AEF\u53E3\u53F7:\u670D\u52A1\u540D
spring.datasource.url=jdbc:oracle:thin:@10.10.10.97:1521:itpm
# \u6570\u636E\u5E93\u767B\u5F55\u7528\u6237\u540D itpmjnyc itpmqdyc
spring.datasource.username=itpmqdyc
# \u6570\u636E\u5E93\u767B\u5F55\u5BC6\u7801
spring.datasource.password=luckserver
# \u6307\u5B9AHibernate\u4F7F\u7528\u7684\u6570\u636E\u5E93\u65B9\u8A00\uFF0C\u4EE5\u751F\u6210\u9488\u5BF9Oracle 12c\u7684\u4F18\u5316SQL
spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
# Hibernate\u6570\u636E\u5B9A\u4E49\u8BED\u8A00(DDL)\u7684\u81EA\u52A8\u64CD\u4F5C\u7B56\u7565\u3002'none'\u8868\u793A\u4E0D\u81EA\u52A8\u521B\u5EFA\u6216\u66F4\u65B0\u6570\u636E\u5E93\u8868\u7ED3\u6784
spring.jpa.hibernate.ddl-auto=none
# \u662F\u5426\u5728\u63A7\u5236\u53F0\u6253\u5370Hibernate\u6267\u884C\u7684SQL\u8BED\u53E5\uFF0C\u4FBF\u4E8E\u8C03\u8BD5
spring.jpa.show-sql=true
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl

pagehelper.helper-dialect=oracle
pagehelper.reasonable=true
pagehelper.support-methods-arguments=true
logging.level.org.apache.ibatis=DEBUG

# ===================================================================
#                 HikariCP \u6570\u636E\u5E93\u8FDE\u63A5\u6C60\u8BE6\u7EC6\u914D\u7F6E
# ===================================================================
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u8FDE\u63A5\u6570\uFF08\u5305\u62EC\u7A7A\u95F2\u548C\u6B63\u5728\u4F7F\u7528\u7684\u8FDE\u63A5\uFF09
spring.datasource.hikari.maximum-pool-size=20
# \u8FDE\u63A5\u6C60\u4E2D\u7EF4\u62A4\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570\u3002\u4E3A\u4E86\u6700\u4F73\u6027\u80FD\uFF0C\u5EFA\u8BAE\u4E0E\u6700\u5927\u8FDE\u63A5\u6570\u8BBE\u7F6E\u76F8\u540C
spring.datasource.hikari.minimum-idle=20
# \u7B49\u5F85\u4ECE\u8FDE\u63A5\u6C60\u83B7\u53D6\u8FDE\u63A5\u7684\u6700\u5927\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u4F1A\u629B\u51FA\u5F02\u5E38
spring.datasource.hikari.connection-timeout=30000
# \u8FDE\u63A5\u5728\u6C60\u4E2D\u4FDD\u6301\u7A7A\u95F2\u72B6\u6001\u7684\u6700\u957F\u65F6\u957F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u5219\u88AB\u56DE\u6536
spring.datasource.hikari.idle-timeout=600000
# \u8FDE\u63A5\u5728\u6C60\u4E2D\u7684\u6700\u5927\u751F\u547D\u5468\u671F\uFF08\u6BEB\u79D2\uFF09\uFF0C\u8D85\u65F6\u5219\u88AB\u66FF\u6362\uFF0C\u4EE5\u9632\u6B62\u8FDE\u63A5\u5931\u6548
spring.datasource.hikari.max-lifetime=1800000
# \u7528\u4E8E\u5728\u5C06\u8FDE\u63A5\u63D0\u4F9B\u7ED9\u8C03\u7528\u8005\u4E4B\u524D\u9A8C\u8BC1\u5176\u6709\u6548\u6027\u7684SQL\u67E5\u8BE2\u8BED\u53E5\uFF08Oracle\u4E13\u7528\uFF09
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL

# ===================================================================
#                            Redis \u914D\u7F6E
# ===================================================================
# Redis\u670D\u52A1\u5668\u7684\u4E3B\u673A\u5730\u5740
spring.redis.host=localhost
# Redis\u670D\u52A1\u5668\u7684\u7AEF\u53E3\u53F7
spring.redis.port=6379
# Redis\u7684\u8BBF\u95EE\u5BC6\u7801\uFF08\u5982\u679C\u8BBE\u7F6E\u4E86\u5BC6\u7801\uFF0C\u8BF7\u53D6\u6D88\u6B64\u884C\u6CE8\u91CA\u5E76\u586B\u5165\u5BC6\u7801\uFF09
# spring.redis.password=your_redis_password
# \u4F7F\u7528\u7684Redis\u6570\u636E\u5E93\u7D22\u5F15\uFF08\u9ED8\u8BA4\u4E3A0\uFF0C\u8303\u56F4\u662F0-15\uFF09
spring.redis.database=0
# \u4EE5\u4E0B\u662FLettuce\u5BA2\u6237\u7AEF\u7684\u8FDE\u63A5\u6C60\u914D\u7F6E
# \u8FDE\u63A5\u6C60\u4E2D\u7684\u6700\u5927\u6D3B\u52A8\u8FDE\u63A5\u6570
spring.redis.lettuce.pool.max-active=8
# \u8FDE\u63A5\u6C60\u4E2D\u5141\u8BB8\u7684\u6700\u5927\u7A7A\u95F2\u8FDE\u63A5\u6570
spring.redis.lettuce.pool.max-idle=8
# \u8FDE\u63A5\u6C60\u4E2D\u7EF4\u62A4\u7684\u6700\u5C0F\u7A7A\u95F2\u8FDE\u63A5\u6570
spring.redis.lettuce.pool.min-idle=0

# \u6587\u4EF6\u4E0A\u4F20\u5B58\u50A8\u76EE\u5F55 (\u8BF7\u6839\u636E\u60A8\u7684\u5B9E\u9645\u73AF\u5883\u4FEE\u6539)
file.upload-dir=D:/uploads


# \u5B9A\u65F6\u4EFB\u52A1\u914D\u7F6E
# \u4EFB\u52A1\u751F\u6210\uFF1A\u6BCF\u5929 22:00 \u6267\u884C
scheduled.generate-task.cron=0 0 22 * * ?
# \u73ED\u6B21\u68C0\u67E5\uFF1A\u6BCF\u5929 00:00 \u52A0\u8F7D\u73ED\u6B21
scheduled.shift-check.cron=0 0 0 * * ?
# \u7EF4\u4FEE/\u505C\u4EA7\u62A5\u544A\u63A8\u9001\uFF1A\u6BCF\u5929\u51CC\u6668 02:00 \u6267\u884C
scheduled.issue-report.cron=0 0 2 * * ?
# \u5305\u673A\u4FE1\u606F\u63A8\u9001\uFF1A\u6BCF\u5929\u51CC\u6668 01:00 \u6267\u884C (Extracted from hardcoded value)
scheduled.equipment-assignments.cron=0 0 1 * * ?
# \u7B80\u5355\u5B9A\u65F6\u4EFB\u52A1\uFF1A\u6BCF10\u79D2\u6267\u884C\u4E00\u6B21 (Extracted from hardcoded value)
scheduled.report-time.fixed-rate=10000
# ===================================================================
#                            JWT \u914D\u7F6E
# ===================================================================
# JWT \u7C3D\u540D\u5BC6\u9470 (\u5728\u751F\u7522\u74B0\u5883\u4E2D\u61C9\u4F7F\u7528\u66F4\u8907\u96DC\u7684\u96A8\u6A5F\u5B57\u4E32)
jwt.secret=lucksoft-qingdao-secret-key-for-jwt-2025
# Token \u904E\u671F\u6642\u9593 (\u55AE\u4F4D\uFF1A\u79D2)\uFF0C\u4F8B\u5982 86400 = 24\u5C0F\u6642
jwt.expiration=86400

# ===================================================================
#                            Kafka \u914D\u7F6E
# ===================================================================
# Kafka\u96C6\u7FA4\u7684\u670D\u52A1\u5668\u5730\u5740\u5217\u8868\uFF0C\u7528\u4E8E\u5EFA\u7ACB\u521D\u59CB\u8FDE\u63A5
spring.kafka.bootstrap-servers=localhost:9092
# ------------------- Kafka \u6D88\u8D39\u8005\u914D\u7F6E -------------------
# \u4E3A\u6240\u6709 @KafkaListener \u6CE8\u89E3\u7684\u6D88\u8D39\u8005\u6307\u5B9A\u4E00\u4E2A\u7EDF\u4E00\u7684\u5206\u7EC4ID\u3002
# \u540C\u4E00\u5206\u7EC4\u5185\u7684\u6D88\u8D39\u8005\u4F1A\u5171\u540C\u6D88\u8D39\u4E00\u4E2A\u4E3B\u9898\uFF0C\u5B9E\u73B0\u8D1F\u8F7D\u5747\u8861\u3002
spring.kafka.consumer.group-id=tsPM-consumer-group
# ===================================================================
#                            Kafka \u4E3B\u9898\u914D\u7F6E
# ===================================================================
# \u672C\u90E8\u5206\u5B9A\u4E49\u4E86\u5E94\u7528\u4E0ETMIS\u7CFB\u7EDF\u4E4B\u95F4\u4EE5\u53CA\u5185\u90E8\u901A\u4FE1\u6240\u4F7F\u7528\u7684\u6240\u6709Kafka\u4E3B\u9898\u3002
# \u547D\u540D\u7EA6\u5B9A\uFF1A
# - `tspm-` \u524D\u7F00\uFF1A\u8868\u793A\u6D88\u606F\u4ECE\u4E3B\u7CFB\u7EDF (TSPM) \u53D1\u51FA\u3002
# - `tmis-` \u524D\u7F00\uFF1A\u8868\u793A\u6D88\u606F\u4ECE\u5916\u90E8\u7CFB\u7EDF (TMIS) \u53D1\u51FA\u3002

# ------------------- \u4E3B\u7CFB\u7EDF (TSPM) -> TMIS \u7684\u4E3B\u9898 (\u751F\u4EA7\u8005) -------------------

# \u57FA\u7840\u6570\u636E - \u73ED\u6B21\u4FE1\u606F\u63A8\u9001\u4E3B\u9898
# \u7531 ShiftTaskChecker \u5B9A\u65F6\u63A8\u9001\uFF0C\u7528\u4E8E\u540C\u6B65\u73ED\u6B21\u8C03\u5EA6\u4FE1\u606F\u5230TMIS\u3002
kafka.topics.tspm-shift-schedules=shift-schedules
# \u57FA\u7840\u6570\u636E - \u5305\u673A(\u8BBE\u5907)\u4FE1\u606F\u63A8\u9001\u4E3B\u9898
# \u7531 EquipmentProducer \u5B9A\u65F6\u63A8\u9001\uFF0C\u7528\u4E8E\u540C\u6B65\u8BBE\u5907\u5206\u914D\u4FE1\u606F\u5230TMIS\u3002
kafka.topics.tspm-equipment-assignments=equipment-assignments
# \u4E1A\u52A1\u4EFB\u52A1 - \u65E5\u4FDD\u4EFB\u52A1\u4E3B\u9898
# \u7531 ShiftTaskChecker \u5728\u5BF9\u5E94\u73ED\u6B21\u68C0\u67E5\u5230\u65B0\u4EFB\u52A1\u65F6\u63A8\u9001\u3002
kafka.topics.tspm-daily-task=daily-task
# \u4E1A\u52A1\u4EFB\u52A1 - \u6708\u4FDD\u4EFB\u52A1\u4E3B\u9898
# \u7531 ShiftTaskChecker \u5728\u5BF9\u5E94\u73ED\u6B21\u68C0\u67E5\u5230\u65B0\u4EFB\u52A1\u65F6\u63A8\u9001\u3002
kafka.topics.tspm-monthly-task=monthly-task
# \u4E1A\u52A1\u4EFB\u52A1 - \u8F6E\u4FDD\u4EFB\u52A1\u4E3B\u9898
# \u7531 ShiftTaskChecker \u5728\u5BF9\u5E94\u73ED\u6B21\u68C0\u67E5\u5230\u65B0\u4EFB\u52A1\u65F6\u63A8\u9001\u3002
kafka.topics.tspm-rotation-task=rotation-task
# \u4E1A\u52A1\u4EFB\u52A1 - \u4F8B\u884C\u4FDD\u517B\u4EFB\u52A1\u4E3B\u9898
# \u7531 ShiftTaskChecker \u5728\u5BF9\u5E94\u73ED\u6B21\u68C0\u67E5\u5230\u65B0\u4EFB\u52A1\u65F6\u63A8\u9001\u3002
kafka.topics.tspm-routine-task=routine-task
# \u4E1A\u52A1\u62A5\u544A - \u7EF4\u4FEE/\u505C\u4EA7\u62A5\u544A\u4E3B\u9898 (\u7531TSPM\u53D1\u51FA)
# \u7531 IssueReportProducer \u5B9A\u65F6\u63A8\u9001\u62A5\u544A\u7ED9TMIS\u3002
kafka.topics.tspm-issue-report=tspm-issue-report
# ------------------- TMIS -> \u4E3B\u7CFB\u7EDF (TSPM) \u7684\u4E3B\u9898 (\u6D88\u8D39\u8005) -------------------

# \u4E1A\u52A1\u62A5\u544A - \u7EF4\u4FEE/\u505C\u4EA7\u62A5\u544A\u4E3B\u9898 (\u7531TMIS\u53D1\u51FA)
# TmisIssueReportConsumer \u76D1\u542C\u6B64\u4E3B\u9898\uFF0C\u4EE5\u63A5\u6536\u6765\u81EATMIS\u7684\u62A5\u544A\u3002
kafka.topics.tmis-issue-report=tmis-issue-report

# ------------------- TMIS -> \u4E3B\u7CFB\u7EDF (TSPM) \u7684\u56DE\u6267\u4E3B\u9898 -------------------
# \u4E1A\u52A1\u53CD\u9988 - TMIS\u4EFB\u52A1\u53CD\u9988\u7684\u56DE\u6267\u4E3B\u9898
# \u5F53 TmisTaskFeedbackConsumer \u6210\u529F\u5904\u7406\u4E00\u6761\u53CD\u9988\u540E\uFF0C\u4F1A\u5411\u6B64\u4E3B\u9898\u53D1\u9001\u4E00\u4E2A\u786E\u8BA4\u56DE\u6267\u3002
kafka.topics.tmis-feedback-receipt=tmis-feedback-receipt


# Kafka \u914D\u7F6E
# \u751F\u4EA7\u8005\u914D\u7F6E
# \u6D88\u606F\u952E\u5E8F\u5217\u5316\u5668
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# \u6D88\u606F\u503C\u5E8F\u5217\u5316\u5668
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# \u751F\u4EA7\u8005\u786E\u8BA4\u6A21\u5F0F\uFF1Aall \u786E\u4FDD\u6240\u6709\u526F\u672C\u786E\u8BA4\uFF0C\u63D0\u9AD8\u53EF\u9760\u6027
spring.kafka.producer.acks=all
# \u751F\u4EA7\u8005\u91CD\u8BD5\u6B21\u6570\uFF0C\u5931\u8D25\u65F6\u81EA\u52A8\u91CD\u8BD5
spring.kafka.producer.retries=3
# \u6279\u91CF\u53D1\u9001\u5927\u5C0F\uFF08\u5B57\u8282\uFF09\uFF0C\u63D0\u9AD8\u541E\u5410\u91CF
spring.kafka.producer.batch-size=16384
# \u751F\u4EA7\u8005\u7F13\u51B2\u533A\u5927\u5C0F\uFF08\u5B57\u8282\uFF09
spring.kafka.producer.buffer-memory=33554432

# \u65E5\u5FD7\u7EA7\u522B
# Kafka \u76F8\u5173\u65E5\u5FD7\u7EA7\u522B
#logging.level.org.springframework.kafka=DEBUG
# \u4EFB\u52A1\u76F8\u5173\u65E5\u5FD7\u7EA7\u522B
#logging.level.com.lucksoft.qingdao.task=DEBUG
# MyBatis Mapper \u65E5\u5FD7\u7EA7\u522B
#logging.level.com.lucksoft.qingdao.mapper=DEBUG

# ===================================================================
#                      API\u5BC6\u94A5\u8BA4\u8BC1\u914D\u7F6E
# ===================================================================
# \u7528\u4E8E\u540E\u53F0\u670D\u52A1\u95F4\u8C03\u7528\u7684API\u5BC6\u94A5
api.secret.key=YOUR_SUPER_SECRET_AND_LONG_API_KEY_HERE

# \u4F20\u9012API\u5BC6\u94A5\u7684HTTP\u8BF7\u6C42\u5934\u540D\u79F0
api.key.header=X-API-KEY